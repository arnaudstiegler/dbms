package edu.polytechnique.inf553;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.text.StringEscapeUtils;

/**
 * Find the country with the largest number of artists, and return the name of
 * the country along with the number of artists that it contains.
 */
@WebServlet(urlPatterns = { "/Q2" })
public final class Q2Servlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public Q2Servlet() {
		super();
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		Connection connection = null;
		try {
			Class.forName("org.postgresql.Driver");
			String host = "localhost";
			String dbName = "arnaudstiegler";
			int port = 5432;
			String serverURL = "jdbc:postgresql://" + host + ":" + port + "/" + dbName;
			String userName = "arnaudstiegler";
			String password = "mypass";
			connection = DriverManager.getConnection(serverURL, userName, password);

			DatabaseMetaData dmd = connection.getMetaData();
			String serverName = dmd.getDatabaseProductName();
			String productVersion = dmd.getDatabaseProductVersion();

			String countryname = "France";

			// STEP 4: Execute a query
			System.out.println("Creating statement...");
			Statement stmt = connection.createStatement();
			String sql;
			sql = "SELECT c.name, Count(a.area = c.id) FROM artist a, country c WHERE  LIMIT 5;";
			String test = "SELECT c.name, Count(a.id) WHERE a.area=c.id LIMIT 5;";
			ResultSet rs = stmt.executeQuery(test);

			response.getWriter().append("<result>");
			// STEP 5: Extract data from result set
			while (rs.next()) {
				// Retrieve by column name
				int id = rs.getInt("id");

				// Display values
				response.getWriter().append("</br>");
				response.getWriter().append("<row>");
				response.getWriter().append("<name>");
				response.getWriter().append(StringEscapeUtils.escapeXml11(Integer.toString(id)));
				response.getWriter().append("</name>");
				response.getWriter().append("</row>");

			}
			response.getWriter().append("</result>");
		} catch (ClassNotFoundException e) {
			System.out.println("Driver not found!");
		} catch (SQLException se) {
			// Handle errors for JDBC
			se.printStackTrace();
		} catch (Exception e) {
			// Handle errors for Class.forName
			e.printStackTrace();
		} finally {
			// finally block used to close resources
			try {
				if (connection != null)
					connection.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}
	}

}
